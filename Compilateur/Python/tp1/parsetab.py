
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7D86989AD3E239BC83C02C585DD588C6'
    
_lr_action_items = {'$end':([2,3,4,6,7,8,10,14,16,17,18,19,20,],[-8,0,-3,-4,-1,-7,-8,-9,-6,-5,-10,-11,-2,]),'PAR_CLOSE':([8,9,10,14,16,18,19,],[-7,16,-8,-9,-6,-10,-11,]),'ADD_OP':([0,1,2,4,8,9,10,11,12,13,14,15,16,17,18,19,],[5,5,-8,12,-7,12,-8,5,5,5,-9,5,-6,12,-10,-11,]),'PAR_OPEN':([0,1,11,12,13,15,],[1,1,1,1,1,1,]),'MUL_OP':([2,4,8,9,10,14,16,17,18,19,],[-8,13,-7,13,-8,-9,-6,13,13,-11,]),'IDENTIFIER':([0,1,11,12,13,15,],[2,10,10,10,10,2,]),'EQUAL':([2,],[11,]),'NUMBER':([0,1,5,11,12,13,15,],[8,8,14,8,8,8,8,]),'SEMICOLON':([2,4,6,7,8,10,14,16,17,18,19,],[-8,-3,-4,15,-7,-8,-9,-6,-5,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignement':([0,15,],[6,6,]),'statement':([0,15,],[7,7,]),'expression':([0,1,11,12,13,15,],[4,9,17,18,19,4,]),'program':([0,15,],[3,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program_statement','parser3.py',14),
  ('program -> statement SEMICOLON program','program',3,'p_program_statement','parser3.py',15),
  ('statement -> expression','statement',1,'p_statement_exp','parser3.py',23),
  ('statement -> assignement','statement',1,'p_statement_exp','parser3.py',24),
  ('assignement -> IDENTIFIER EQUAL expression','assignement',3,'p_assignement','parser3.py',29),
  ('expression -> PAR_OPEN expression PAR_CLOSE','expression',3,'p_expression_par','parser3.py',34),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser3.py',39),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num','parser3.py',40),
  ('expression -> ADD_OP NUMBER','expression',2,'p_expression_unary_num','parser3.py',45),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser3.py',62),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser3.py',63),
]
